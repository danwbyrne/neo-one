aliases:
  - &restore-yarn-cache-10
    keys:
      - v6-yarn-10-{{ .Branch }}-{{ checksum "common/config/yarn.lock" }}
      # Fallback in case checksum fails
      - v6-yarn-10-{{ .Branch }}-

  - &save-yarn-cache-10
    paths:
      - common/temp/node_modules
      - common/temp/yarn-cache
    key: v6-yarn-10-{{ .Branch }}-{{ checksum "common/config/yarn.lock" }}

  - &restore-yarn-cache-12
    keys:
      - v6-yarn-12-{{ .Branch }}-{{ checksum "common/config/yarn.lock" }}
      # Fallback in case checksum fails
      - v6-yarn-12-{{ .Branch }}-

  - &save-yarn-cache-12
    paths:
      - common/temp/node_modules
      - common/temp/yarn-cache
    key: v6-yarn-12-{{ .Branch }}-{{ checksum "common/config/yarn.lock" }}

  - &filter-ignore-bors-tmp
    branches:
      ignore:
        - staging.tmp
        - trying.tmp

  - &install |
    rush install

  - &lint
    working_directory: ~/neo-one
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache-12
      - run: *install
      - save-cache: *save-yarn-cache-12
      - run:
          name: Changelog
          command: rush change -v
          when: always
      - run:
          name: Prettier
          command: rush nit
          when: always
      - run:
          name: Typescript
          command: rush tsc
          when: always
      - run:
          name: Lint
          command: rush lint
          when: always

  - &build-e2e10
    working_directory: ~/neo-one
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache-10
      - run: *install
      - save-cache: *save-yarn-cache-10
      - run:
          name: Build
          command: rush rebuild --verbose
      - persist_to_workspace:
          root: ~/neo-one
          paths:
            - common
            - temp
            - node_modules

  - &test10
    working_directory: ~/neo-one
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache-10
      - run: *install
      - save-cache: *save-yarn-cache-10
      - run:
          name: Test
          command: yarn test-ci $(circleci tests glob "packages/*/src/__tests__/**/*.test.ts" | circleci tests split --split-by=timings) --coverage
      - run:
          name: Upload Unit Test Coverage
          command: yarn run codecov -f coverage/coverage-final.json -F unit
          when: always
      - store_test_results:
          path: reports
    parallelism: 2

  - &e2e10
    working_directory: ~/neo-one
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: E2E
          command: yarn nyc --reporter json yarn e2e-ci $(circleci tests glob "packages/*/src/__e2e__/**/*.test.ts" | circleci tests split --split-by=timings)
      - run:
          name: Upload E2E Test Coverage
          command: yarn run codecov -f coverage/coverage-final.json -F e2e
          when: always
      - store_test_results:
          path: reports
    parallelism: 2

  - &build-e2e12
    working_directory: ~/neo-one
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache-12
      - run: *install
      - save-cache: *save-yarn-cache-12
      - run:
          name: Build
          command: yarn build:e2e
      - persist_to_workspace:
          root: ~/neo-one
          paths:
            - dist
            - node_modules

  - &test12
    working_directory: ~/neo-one
    steps:
      - checkout
      - restore-cache: *restore-yarn-cache-12
      - run: *install
      - save-cache: *save-yarn-cache-12
      - run:
          name: Test
          command: yarn test-ci $(circleci tests glob "packages/*/src/__tests__/**/*.test.ts" | circleci tests split --split-by=timings) --coverage
      - run:
          name: Upload Unit Test Coverage
          command: yarn run codecov -f coverage/coverage-final.json -F unit
          when: always
      - store_test_results:
          path: reports
    parallelism: 2

  - &e2e12
    working_directory: ~/neo-one
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: E2E
          command: yarn nyc --reporter json yarn e2e-ci $(circleci tests glob "packages/*/src/__e2e__/**/*.test.ts" | circleci tests split --split-by=timings)
      - run:
          name: Upload E2E Test Coverage
          command: yarn run codecov -f coverage/coverage-final.json -F e2e
          when: always
      - store_test_results:
          path: reports
    parallelism: 2

node10: &node10
  docker:
    - image: neotracker/neo-one-circleci-node@sha256:0f047d3662ad72b75e9550e41b22a2be0bf7fa8ee6563b65272b5af966b07f20

node12: &node12
  docker:
    - image: neotracker/neo-one-circleci-node@sha256:6f76ab22882896c057d9d805955892f1dee26bb1a4257a6d095d07d617aa4d5c

version: 2
jobs:
  test10:
    <<: *node10
    <<: *test10
  e2e10:
    <<: *node10
    <<: *e2e10
  build-e2e10:
    <<: *node10
    <<: *build-e2e10

  test12:
    <<: *node12
    <<: *test12
  e2e12:
    <<: *node12
    <<: *e2e12
  build-e2e12:
    <<: *node12
    <<: *build-e2e12

  lint:
    <<: *node12
    <<: *lint

workflows:
  version: 2
  test10:
    jobs:
      - build-e2e10:
          filters: *filter-ignore-bors-tmp
      - test10:
          filters: *filter-ignore-bors-tmp
      - e2e10:
          requires:
            - build-e2e10
          filters: *filter-ignore-bors-tmp
      - lint:
          filters: *filter-ignore-bors-tmp
  test12:
    jobs:
      - build-e2e12:
          filters: *filter-ignore-bors-tmp
      - test12:
          filters: *filter-ignore-bors-tmp
      - e2e12:
          requires:
            - build-e2e12
          filters: *filter-ignore-bors-tmp
      - lint:
          filters: *filter-ignore-bors-tmp
